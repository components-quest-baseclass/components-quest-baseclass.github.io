customElements.define("components-quest-baseclass",class extends HTMLElement{constructor(){super(),this.$hive={newbee:()=>{document.addEventListener(this.nodeName,(e=>e.composedPath().forEach((n=>n.$hive?.push(this)))),{once:!0}),this.dispatchEvent(new CustomEvent(this.nodeName,{bubbles:!0,composed:!0}))},push:bee=>{this.$hive.matched(bee)&&(bee.$hive.hives.push(this),this.$hive.nodes.push(bee),this.$hive[bee.localName]&&this.$hive[bee.localName](bee))},nodes:[],hives:[],add:(localName,callbackFunc=(()=>{}))=>{"string"==typeof localName?this.$hive[localName.toLowerCase()]=callbackFunc:Object.entries(localName).map((([key,func])=>this.$hive.add(key,func)))},filter:name=>this.$hive.nodes.filter((node=>node.localName==name.toLowerCase())),matched:bee=>Object.keys(this.$hive).includes(bee.localName.toLowerCase())},this.$listeners=[]}$dispatch(name,func){this.dispatchEvent(new CustomEvent(name,{bubbles:!0,composed:!0,detail:func}))}$listen(root,name,func){root.addEventListener(name,func)}$({mode:mode=!1,slotAssignment:slotAssignment="named",...obj},root=(mode?this.attachShadow({mode:mode,slotAssignment:slotAssignment}):this.shadowRoot||this),fragment=document.createDocumentFragment(),onmount=[]){"object"==typeof obj&&(fragment.append(...Object.entries(obj).map((([key,{attrs:attrs={},append:append={},style:style={},init:init,exec:exec=!1,after:after=!1,...remainingprops},tag=key.split`$`,el=document.createElement(tag[0])])=>{if(Object.entries(attrs).map((keyvalue=>el.setAttribute(...keyvalue))),Object.assign(el.style,style),this.$(append,el),init&&init(),after){const logafter=str=>{console.log(`%c ${str} `,"background:yellow",el.nodeName)};setTimeout((()=>{logafter(`${this.nodeName} setTimeout 1sec`),after()}),1)}exec&&onmount.push(exec),tag[1]&&(console.assert(!this[tag[1]],"%c %s ","background:red;color:beige",tag),this[tag[1]]=el);let moremagic={style:{toggle:(state=void 0)=>{el.disabled=void 0!==state?state:!el.disabled},show:()=>el.toggle(!1),hide:()=>el.toggle(!0)}}[tag[0]]||{};return Object.assign(el,{...remainingprops,...moremagic})}))),root&&(root.append(fragment),onmount.map((exec=>exec()))))}});