customElements.get("components-quest-baseclass")||customElements.define("components-quest-baseclass",class extends HTMLElement{getPropertyValue(name,root=this){return getComputedStyle(root).getPropertyValue("--"+name).trim()}setPropertyValue(name,value,root=this){root.style.setProperty("--"+name,value)}constructor(){super(),this.$hive={newbee:()=>{document.addEventListener(this.nodeName,(e=>e.composedPath().forEach((n=>n.$hive?.push(this)))),{once:!0}),this.dispatchEvent(new CustomEvent(this.nodeName,{bubbles:!0,composed:!0}))},push:bee=>{this.$hive.matched(bee)&&(bee.$hive.hives.push(this),this.$hive.nodes.push(bee),this.$hive[bee.localName]&&this.$hive[bee.localName](bee))},nodes:[],hives:[],add:(localName,callbackFunc=(()=>{}))=>{"string"==typeof localName?this.$hive[localName.toLowerCase()]=callbackFunc:Object.entries(localName).map((([key,func])=>this.$hive.add(key,func)))},filter:name=>this.$hive.nodes.filter((node=>node.localName==name.toLowerCase())),matched:bee=>Object.keys(this.$hive).includes(bee.localName.toLowerCase())},this.$listeners=[]}$dispatch({name:name,detail:detail={},bubbles:bubbles=!0,composed:composed=!0,cancelable:cancelable=!0,options:options={bubbles:bubbles,composed:composed,cancelable:cancelable},eventbus:eventbus=this,once:once=!1}){eventbus.dispatchEvent(new CustomEvent(name,{...options,detail:detail}),once)}$emit(name,detail={},root=this){root.$dispatch({name:name,detail:{...detail}})}$listen({name:name=this.nodeName,handler:handler=(evt=>{console.error(evt.type)}),eventbus:eventbus=this,useCapture:useCapture=!1}){eventbus.addEventListener(name,(evt=>handler(evt)),useCapture),this._listeners=this._listeners||[],this._listeners.push((()=>eventbus.$removeEventListener(name,handler)))}$removeEventListeners(){this._listeners.map((x=>x()))}$registerEventMethod({scope:scope=this,methodName:methodName=console.error("Missing methodeName",scope)}){let eventbus,[event,...name]=methodName.split("_");//! name becomes an Array!
event=event.replace("$",""),
//! determine name and eventbus where to listen
name=name.join("_"),"eventbus"===event?eventbus=scope.eventbus:"serverevent"==event||(eventbus=scope);let useCapture=name.includes("_capture");useCapture&&(name=name.replace("_capture",""));try{scope.$listen({name:name,eventbus:eventbus,handler:evt=>{console.log(`%c ${eventbus.localName} %c ${evt.type}`,"background:blue;color:yellow","background:gold",{evt:evt}),scope[methodName].call(scope,evt)},useCapture:useCapture})}catch(error){console.error(error.message,{scope:scope,methodName:methodName})}return`${event}:${name}`}$registerEventMethods({scope:scope}){let handlerNames=Object.getOwnPropertyNames(Object.getPrototypeOf(scope)).filter((methodName=>methodName.startsWith("$")&&methodName.includes("event"))).map((methodName=>this.$registerEventMethod({scope:scope,methodName:methodName}))).filter(Boolean);handlerNames.length&&this.consolelog(scope.nodeName,"registerEvents:",handlerNames.join(", "))}$({mode:mode=!1,slotAssignment:slotAssignment="named",...obj},root=(mode?this.attachShadow({mode:mode,slotAssignment:slotAssignment}):this.shadowRoot||this),fragment=document.createDocumentFragment(),onmount=[]){"object"==typeof obj&&(fragment.append(...Object.entries(obj).map((([key,{attrs:attrs={},append:append={},style:style={},init:init,exec:exec=!1,after:after=!1,...remainingprops},tag=key.split`$`,el=document.createElement(tag[0])])=>{if(Object.entries(attrs).map((keyvalue=>el.setAttribute(...keyvalue))),Object.assign(el.style,style),this.$(append,el),init&&init(),after){let logafterFunc=str=>console.log(`%c ${el.nodeName} - ${str} `,"background:yellow");setTimeout((()=>{logafterFunc("setTimeout 1sec"),after(this)}),1)}exec&&onmount.push(exec),tag[1]&&(console.assert(!this[tag[1]],"%c %s ","background:red;color:beige",tag),this[tag[1]]=el);let moremagic={style:{toggle:(state=void 0)=>{el.disabled=void 0!==state?state:!el.disabled},show:()=>el.toggle(!1),hide:()=>el.toggle(!0)}}[tag[0]]||{};return Object.assign(el,{...remainingprops,...moremagic})}))),root&&(root.append(fragment),onmount.map((exec=>exec()))))}});